/*
 gets monthly income from user, and how much they spend on various categories, 
displays the information in a bar graph and notifies the user if they are spending
too much or not saving enough
April 26, 2017
Brett Castellano
 */

/**
 *
 * @author brcas1396
 */
import java.text.NumberFormat;
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputs = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        amountsPrompt = new javax.swing.JLabel();
        housingPrompt = new javax.swing.JLabel();
        housingInput = new javax.swing.JTextField();
        transInput = new javax.swing.JTextField();
        lifeInput = new javax.swing.JTextField();
        savingsInput = new javax.swing.JTextField();
        transPrompt = new javax.swing.JLabel();
        lifePrompt = new javax.swing.JLabel();
        savingsPrompt = new javax.swing.JLabel();
        calculate = new javax.swing.JButton();
        incomePrompt = new javax.swing.JLabel();
        incomeInput = new javax.swing.JTextField();
        graph = new javax.swing.JPanel();
        monthlySpending = new javax.swing.JLabel();
        graphHousing = new javax.swing.JLabel();
        graphTrans = new javax.swing.JLabel();
        graphLife = new javax.swing.JLabel();
        graphSavings = new javax.swing.JLabel();
        graphHPercent = new javax.swing.JLabel();
        graphTPercent = new javax.swing.JLabel();
        graphLPercent = new javax.swing.JLabel();
        graphSPercent = new javax.swing.JLabel();
        housingBar = new javax.swing.JLabel();
        transBar = new javax.swing.JLabel();
        lifeBar = new javax.swing.JLabel();
        savingsBar = new javax.swing.JLabel();
        tips = new javax.swing.JPanel();
        housingTip = new javax.swing.JLabel();
        transTip = new javax.swing.JLabel();
        lifeTip = new javax.swing.JLabel();
        savingsTip = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        inputs.setBackground(new java.awt.Color(102, 102, 255));
        inputs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Title.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Title.setText("Family Budget ");

        amountsPrompt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        amountsPrompt.setText("Enter the amount (in dollars) you spend in each category per month: ");

        housingPrompt.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        housingPrompt.setText("Housing: ");

        housingInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                housingInputActionPerformed(evt);
            }
        });

        transInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transInputActionPerformed(evt);
            }
        });

        transPrompt.setText("Transportation: ");

        lifePrompt.setText("Life:");

        savingsPrompt.setText("Savings: ");

        calculate.setText("Calculate");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        incomePrompt.setText("Enter your net monthly income:");

        javax.swing.GroupLayout inputsLayout = new javax.swing.GroupLayout(inputs);
        inputs.setLayout(inputsLayout);
        inputsLayout.setHorizontalGroup(
            inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputsLayout.createSequentialGroup()
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(housingPrompt)
                            .addComponent(transPrompt)
                            .addComponent(lifePrompt)
                            .addComponent(savingsPrompt))
                        .addGap(18, 18, 18)
                        .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(savingsInput)
                            .addComponent(lifeInput)
                            .addComponent(transInput)
                            .addComponent(housingInput, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(Title))
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(amountsPrompt))
                    .addGroup(inputsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(incomePrompt)
                        .addGap(18, 18, 18)
                        .addComponent(incomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        inputsLayout.setVerticalGroup(
            inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(amountsPrompt)
                .addGap(18, 18, 18)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(housingPrompt)
                    .addComponent(housingInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transPrompt)
                    .addComponent(transInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lifePrompt)
                    .addComponent(lifeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(savingsPrompt)
                    .addComponent(savingsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(incomePrompt)
                    .addComponent(incomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculate, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );

        graph.setBackground(new java.awt.Color(153, 255, 153));
        graph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        monthlySpending.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        monthlySpending.setText("Monthly Spending");

        graphHousing.setText("Housing: ");

        graphTrans.setText("Transportation: ");

        graphLife.setText("Life: ");

        graphSavings.setText("Savings: ");

        graphHPercent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        graphTPercent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        graphLPercent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        graphSPercent.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        housingBar.setBackground(new java.awt.Color(51, 51, 255));
        housingBar.setOpaque(true);

        transBar.setBackground(new java.awt.Color(255, 0, 0));
        transBar.setOpaque(true);

        lifeBar.setBackground(new java.awt.Color(255, 255, 0));
        lifeBar.setOpaque(true);

        savingsBar.setBackground(new java.awt.Color(255, 51, 204));
        savingsBar.setOpaque(true);

        javax.swing.GroupLayout graphLayout = new javax.swing.GroupLayout(graph);
        graph.setLayout(graphLayout);
        graphLayout.setHorizontalGroup(
            graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(graphLayout.createSequentialGroup()
                .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(graphLayout.createSequentialGroup()
                        .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(graphLayout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(graphTrans))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(graphSavings, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(graphLife, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(graphHousing, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(graphLayout.createSequentialGroup()
                                .addComponent(graphSPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(savingsBar))
                            .addGroup(graphLayout.createSequentialGroup()
                                .addComponent(graphLPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lifeBar))
                            .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, graphLayout.createSequentialGroup()
                                    .addComponent(graphHPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(housingBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, graphLayout.createSequentialGroup()
                                    .addComponent(graphTPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(transBar)))))
                    .addGroup(graphLayout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(monthlySpending)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        graphLayout.setVerticalGroup(
            graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(graphLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(monthlySpending)
                .addGap(13, 13, 13)
                .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(graphLayout.createSequentialGroup()
                        .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(graphHousing)
                            .addComponent(housingBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(graphTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(graphLayout.createSequentialGroup()
                        .addComponent(graphHPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(graphTPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphLPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(graphLife)
                    .addComponent(lifeBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, Short.MAX_VALUE)
                .addGroup(graphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphSavings)
                    .addComponent(graphSPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(savingsBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        tips.setBackground(new java.awt.Color(51, 255, 255));
        tips.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout tipsLayout = new javax.swing.GroupLayout(tips);
        tips.setLayout(tipsLayout);
        tipsLayout.setHorizontalGroup(
            tipsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tipsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tipsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tipsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(transTip, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                        .addComponent(housingTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lifeTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(savingsTip, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tipsLayout.setVerticalGroup(
            tipsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tipsLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(housingTip, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(transTip, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lifeTip, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(savingsTip, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Quit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Help");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(graph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tips, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(inputs, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tips, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        
        double housing, trans, life, savings, income;       //variables (will be inputted by user)
        String housingPercent, transPercent, lifePercent, savingsPercent, incomePercent;        //so we can convert amounts to percentages        
        NumberFormat percent = NumberFormat.getPercentInstance();         
        
        /* get amounts spent from user */
        housing = (Double.parseDouble(housingInput.getText()));
        trans = Double.parseDouble(transInput.getText());
        life = Double.parseDouble(lifeInput.getText());
        savings = Double.parseDouble(savingsInput.getText());
        income = Double.parseDouble(incomeInput.getText());
        
        /* convert amounts spent to percentages */
        housingPercent = percent.format(housing/income);
        transPercent = percent.format(trans/income);
        lifePercent = percent.format(life/income);
        savingsPercent = percent.format(savings/income);
        
        /* display percentages */
        graphHPercent.setText(housingPercent);
        graphTPercent.setText(transPercent);
        graphLPercent.setText(lifePercent);
        graphSPercent.setText(savingsPercent);
        
        /* creating bar graph (make bar longer for every % spent) */
        for (int i = 0; i < (int)(housing/income*100); i++) {
            housingBar.setText(housingBar.getText() + " ");            
        }
        for (int i = 0; i < (int)(trans/income*100); i++) {
            transBar.setText(transBar.getText() + " ");           
        }
        for (int i = 0; i < (int)(life/income*100); i++) {
            lifeBar.setText(lifeBar.getText() + " ");           
        }
        for (int i = 0; i < (int)(savings/income*100); i++) {
            savingsBar.setText(savingsBar.getText() + " ");            
        }
        
        /* notify user if they are spending too much or not saving enough */
        if (housing/income*100 > 35) {
            housingTip.setText("Warning! You are spending too much on housing!");
        } else {
            housingTip.setText("Good job! Your spending on housing is okay!");
        }
        if (trans/income*100 > 15) {
            transTip.setText("Warning! You are spending too much on transportation!");
        } else {
            transTip.setText("Good job! Your spending on transportation is okay!");
        }
        if (life/income*100 > 25) {
            lifeTip.setText("Warning! You are spending too much on life!");
        } else {
            lifeTip.setText("Good job! Your spending on life is okay!");
        }
        if (savings/income*100 < 10) {
            savingsTip.setText("Warning! You're not putting enough money into savings!");
        } else {
            savingsTip.setText("Good job! You're putting enough money into savings!");
        }
        
    }//GEN-LAST:event_calculateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void housingInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_housingInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_housingInputActionPerformed

    private void transInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_transInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JLabel amountsPrompt;
    private javax.swing.JButton calculate;
    private javax.swing.JPanel graph;
    private javax.swing.JLabel graphHPercent;
    private javax.swing.JLabel graphHousing;
    private javax.swing.JLabel graphLPercent;
    private javax.swing.JLabel graphLife;
    private javax.swing.JLabel graphSPercent;
    private javax.swing.JLabel graphSavings;
    private javax.swing.JLabel graphTPercent;
    private javax.swing.JLabel graphTrans;
    private javax.swing.JLabel housingBar;
    private javax.swing.JTextField housingInput;
    private javax.swing.JLabel housingPrompt;
    private javax.swing.JLabel housingTip;
    private javax.swing.JTextField incomeInput;
    private javax.swing.JLabel incomePrompt;
    private javax.swing.JPanel inputs;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JLabel lifeBar;
    private javax.swing.JTextField lifeInput;
    private javax.swing.JLabel lifePrompt;
    private javax.swing.JLabel lifeTip;
    private javax.swing.JLabel monthlySpending;
    private javax.swing.JLabel savingsBar;
    private javax.swing.JTextField savingsInput;
    private javax.swing.JLabel savingsPrompt;
    private javax.swing.JLabel savingsTip;
    private javax.swing.JPanel tips;
    private javax.swing.JLabel transBar;
    private javax.swing.JTextField transInput;
    private javax.swing.JLabel transPrompt;
    private javax.swing.JLabel transTip;
    // End of variables declaration//GEN-END:variables
}
